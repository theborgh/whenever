// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Meeting {
  id        String   @id @default(cuid())
  name      String
  timezone  String // preferred timezone for the meeting, meeting will always be displayed in this timezone
  startDay  DateTime
  endDay    DateTime @default(now())
  startTime Int // in 15-minute increments from midnight, 0-95  
  endTime   Int // in 15-minute increments from midnight, 0-95
  users     User[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User {
  id                 String           @id @default(cuid())
  name               String
  email              String?
  password           String?
  timezone           String
  meeting            Meeting          @relation(fields: [meetingId], references: [id])
  meetingId          String
  availability       UserAvailability @relation(fields: [userAvailabilityId], references: [id])
  userAvailabilityId String           @unique
  createdAt          DateTime         @default(now())
  updatedAt          DateTime         @updatedAt
}

// Availability for a given user for a given meeting
model UserAvailability {
  id         String     @id @default(cuid())
  meetingId  String
  user       User?
  userId     String
  timeRanges TimeSlot[]
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}

// Availability for a given user for a given meeting and for a given day
model TimeSlot {
  id             String           @id @default(cuid())
  day            DateTime
  startTime      Int // in 15-minute increments from midnight, 0-95
  endTime        Int // in 15-minute increments from midnight, 0-95
  availability   UserAvailability @relation(fields: [availabilityId], references: [id])
  availabilityId String
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
}
